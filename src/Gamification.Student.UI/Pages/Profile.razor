@page "/profile"
@using Gamification.Student.UI.Models
@using Gamification.Student.UI.Models
@using Gamification.Student.UI.Services.Helpers
@inject TelegramUserHelper UserService

<PageTitle>Profile</PageTitle>

<!-- Gift Section (Coming Soon) -->
<div class="gift-section">
    <div class="gift-content">
        @if(string.IsNullOrWhiteSpace(user?.Photo)){
            <img src="./images/boy.svg" alt="Profile Picture" class="profile-pic" />
        }
        else{
            <img src="@user.Photo" alt="Profile Picture" class="profile-pic"
                 onerror="this.onerror=null; this.src='./images/boy.svg';" />
        }
        
        @if(user is null){
            <h2>Foydalanuvchi</h2>
        }
        else{
            <h2>@user.First_name</h2>
        }
    </div>
</div>

<div>
    <p>
        Hisobingizda
    </p>
    <h3>108 <img src="./images/coin.svg" alt="Coin" class="coin-icon" /></h3>
</div>

<!-- Test Bo'limlari -->
<div class="page" id="sections">
    <h2>Sizning kurslaringiz</h2>
    <div class="card">
        <div>
            <strong>Matematika</strong>
            <p>Qobulov Abdujalil</p>
        </div>
        <span>30 ta test</span>
    </div>
    <div class="card">
        <div>
            <strong>Ingliz tili</strong>
            <p>Isoqjonov Humoyun</p>
        </div>
        <span>25 ta test</span>
    </div>
    <div class="card">
        <div>
            <strong>Dasturlashda</strong>
            <p>Sardor Sohinazarov</p>
        </div>
        <span>25 ta test</span>
    </div>
</div>

<NavMenu />

@code{
    private TelegramUser? user;
    private bool isInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            user = await UserService.GetUserAsync();
            isInitialized = true;
            StateHasChanged();
        }
    }
}