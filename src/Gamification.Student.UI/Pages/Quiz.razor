@page "/quiz/{id:int}"
@using System.Text.Json
@using DataTransferObjects.Questions
@using Gamification.Application.DataTransferObjects.Quiz
@using Gamification.Student.UI.Services.Quiz
@inject IQuizService QuizService
@inject NavigationManager NavigationManager

<PageTitle>Quiz</PageTitle>

<div class="page">
    @if (Questions == null)
    {
        <p>Yuklanmoqda...</p>
    }
    else if (!isFinished)
    {
        if (CurrentQuestion is not null)
        {
            <Question question="@CurrentQuestion"
            OnOptionsSelected="OnOptionsSelected"
            selectedAnswerIds="@GetSelectedAnswerIds(CurrentQuestion.Id)" />

            <div class="nav-arrows">
                @if (Questions.First()?.Id != CurrentQuestion.Id){
                    <span @onclick="PreviousQuestion"> <img src="./images/left-arrow.svg" /> </span>
                }
                @if (Questions.Last()?.Id != CurrentQuestion.Id){
                    <span @onclick="NextQuestion"> <img src="./images/right-arrow.svg" /> </span>
                }
            </div>

            if (Questions.Last()?.Id == CurrentQuestion.Id)
            {
                <div class="nav-arrows">
                    <button class="finish-btn" @onclick="FinishQuiz">Finish</button>
                </div>
            }
        }
        else
        {
            <p>Hozircha test mavjud emas.</p>

            <div class="quiz-actions">
                <button class="exit-btn" @onclick="ExitQuiz">Chiqish</button>
            </div>
        }
    }
    else
    {
        @if (quizResult is not null)
        {
            <div class="result-container">
                <img src="/images/boy.svg" class="result-avatar" alt="Profile" />

                <p class="result-title">Sizning natijangiz:</p>

                <p class="result-percent">@((int)((double)quizResult.CorrectAnswersCount / quizResult.QuestionsCount * 100))%</p>

                <p class="result-subtitle">
                    Siz berilgan testdan <strong>@quizResult.CorrectAnswersCount</strong> ta to‘g‘ri topdingiz!
                </p>
            </div>
        }
        else
        {
            <p>Natija aniqlanmoqda.</p>
        }

        <div class="quiz-actions">
            <button class="restart-btn" @onclick="RestartQuiz">Testni Qayta Boshlash</button>
            <button class="exit-btn" @onclick="ExitQuiz">Chiqish</button>
        </div>
    }
</div>

@code {
    [Parameter]
    public int id { get; set; }

    private List<QuestionViewModel> Questions;
    private QuestionViewModel? CurrentQuestion;
    private int currentIndex = 0;
    private bool isFinished = false;
    private CheckedQuizResultDto? quizResult;

    private Dictionary<int, List<int>> SelectedAnswers = new();

    protected override async Task OnInitializedAsync()
    {
        Questions = await QuizService.GetQuestionsAsync(id);

        if (Questions is { Count: > 0 })
            CurrentQuestion = Questions[currentIndex];
    }

    private List<int> GetSelectedAnswerIds(int questionId)
    {
        return SelectedAnswers.TryGetValue(questionId, out var list) ? list : new List<int>();
    }

    private void OnOptionsSelected(List<int> selectedIds)
    {
        if (CurrentQuestion != null)
            SelectedAnswers[CurrentQuestion.Id] = selectedIds;
    }

    private void NextQuestion()
    {
        if (currentIndex + 1 < Questions.Count)
        {
            currentIndex++;
            CurrentQuestion = Questions[currentIndex];
        }
        else
        {
            isFinished = true;
        }
    }

    private void PreviousQuestion()
    {
        if (currentIndex > 0)
        {
            currentIndex--;
            CurrentQuestion = Questions[currentIndex];
        }
    }

    private void RestartQuiz()
    {
        currentIndex = 0;
        isFinished = false;
        SelectedAnswers.Clear();
        CurrentQuestion = Questions[currentIndex];
    }

    private async Task CheckResult()
    {
        quizResult = await QuizService.CheckTestAsync(new QuizResultDto(){
                QuizId = id,
                Answers = SelectedAnswers
        });
    }

    private void ExitQuiz()
    {
        NavigationManager.NavigateTo("/exams");
    }

    private async Task FinishQuiz()
    {
        isFinished = true;
        CurrentQuestion = null;

        await CheckResult();
    }
}