//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Courses;
using Common.Paginations.Models;
using Common;
using DataTransferObjects.Courses;
using Microsoft.AspNetCore.Authorization;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Authorize(Roles = "Admin")]
    public class CoursesController : ControllerBase
    {
        private readonly ICoursesService _coursesService;
        public CoursesController(ICoursesService coursesService)
        {
            _coursesService = coursesService;
        }

        [HttpPost]
        public async Task<Result<CourseViewModel>> AddAsync(CourseCreationDto courseCreationDto)
        {
            return Result<CourseViewModel>.Success(await _coursesService.AddAsync(courseCreationDto));
        }

        [HttpGet]
        public async Task<Result<List<CourseViewModel>>> GetAllAsync()
        {
            return Result<List<CourseViewModel>>.Success(await _coursesService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<CourseViewModel>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<CourseViewModel>>.Success(await _coursesService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<CourseViewModel>> GetByIdAsync(int id)
        {
            return Result<CourseViewModel>.Success(await _coursesService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<CourseViewModel>> UpdateAsync(int id, CourseModificationDto courseModificationDto)
        {
            return Result<CourseViewModel>.Success(await _coursesService.UpdateAsync(id, courseModificationDto));
        }

        [HttpDelete("{id}")]
        public async Task<Result<CourseViewModel>> DeleteAsync(int id)
        {
            return Result<CourseViewModel>.Success(await _coursesService.DeleteAsync(id));
        }
    }
}