//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Questions;
using Common.Paginations.Models;
using Common;
using Gamification.Domain.Entities;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class QuestionsController : ControllerBase
    {
        private readonly IQuestionsService _questionsService;
        public QuestionsController(IQuestionsService questionsService)
        {
            _questionsService = questionsService;
        }

        [HttpPost]
        public async Task<Result<Question>> AddAsync(Question question)
        {
            return Result<Question>.Success(await _questionsService.AddAsync(question));
        }

        [HttpGet]
        public async Task<Result<List<Question>>> GetAllAsync()
        {
            return Result<List<Question>>.Success(await _questionsService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<Question>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<Question>>.Success(await _questionsService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<Question>> GetByIdAsync(int id)
        {
            return Result<Question>.Success(await _questionsService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<Question>> UpdateAsync(int id, Question question)
        {
            return Result<Question>.Success(await _questionsService.UpdateAsync(id, question));
        }

        [HttpDelete("{id}")]
        public async Task<Result<Question>> DeleteAsync(int id)
        {
            return Result<Question>.Success(await _questionsService.DeleteAsync(id));
        }
    }
}