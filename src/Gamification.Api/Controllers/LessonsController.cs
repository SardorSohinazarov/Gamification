//-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
//-----------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Services.Lessons;
using Common.Paginations.Models;
using Common;
using DataTransferObjects.Lessons;
using Microsoft.AspNetCore.Authorization;

namespace Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    [Authorize(Roles = "Admin")]
    public class LessonsController : ControllerBase
    {
        private readonly ILessonsService _lessonsService;
        public LessonsController(ILessonsService lessonsService)
        {
            _lessonsService = lessonsService;
        }

        [HttpPost]
        public async Task<Result<LessonViewModel>> AddAsync(LessonCreationDto lessonCreationDto)
        {
            return Result<LessonViewModel>.Success(await _lessonsService.AddAsync(lessonCreationDto));
        }

        [HttpGet]
        public async Task<Result<List<LessonViewModel>>> GetAllAsync()
        {
            return Result<List<LessonViewModel>>.Success(await _lessonsService.GetAllAsync());
        }

        [HttpPost("filter")]
        public async Task<Result<ListResult<LessonViewModel>>> FilterAsync(PaginationOptions filter)
        {
            return Result<ListResult<LessonViewModel>>.Success(await _lessonsService.FilterAsync(filter));
        }

        [HttpGet("{id}")]
        public async Task<Result<LessonViewModel>> GetByIdAsync(int id)
        {
            return Result<LessonViewModel>.Success(await _lessonsService.GetByIdAsync(id));
        }

        [HttpPut("{id}")]
        public async Task<Result<LessonViewModel>> UpdateAsync(int id, LessonModificationDto lessonModificationDto)
        {
            return Result<LessonViewModel>.Success(await _lessonsService.UpdateAsync(id, lessonModificationDto));
        }

        [HttpDelete("{id}")]
        public async Task<Result<LessonViewModel>> DeleteAsync(int id)
        {
            return Result<LessonViewModel>.Success(await _lessonsService.DeleteAsync(id));
        }
    }
}