<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/questions/{id:int}"
@rendermode InteractiveServer
@using System
@using Gamification.Domain.Entities
@using Services.Questions
@inject IQuestionsService QuestionService
@inject NavigationManager NavigationManager

<h3>Question Details</h3>

@if (question == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-3">Text</dt>
        @if(@question.Text != default)
        {
            <dd class="col-sm-9">@question.Text</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Test</dt>
        @if(@question.Test != default)
        {
            <dd class="col-sm-9"><a href="/Tests/@question.TestId">link</a></dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">CreatedBy</dt>
        @if(@question.CreatedBy != default)
        {
            <dd class="col-sm-9">@question.CreatedBy</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Created</dt>
        @if(@question.Created != default)
        {
            <dd class="col-sm-9">@question.Created</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastModifiedBy</dt>
        @if(@question.LastModifiedBy != default)
        {
            <dd class="col-sm-9">@question.LastModifiedBy</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastModified</dt>
        @if(@question.LastModified != default)
        {
            <dd class="col-sm-9">@question.LastModified</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

    </dl>
    <div>
        <button class="btn btn-primary" @onclick="Save">Save</button>
        <button class="btn btn-secondary" @onclick="BackToList">Back to List</button>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Question? question;

    protected override async Task OnParametersSetAsync()
    {
        question = await QuestionService.GetByIdAsync(Id);
    }

    private void Save()
    {
        throw new NotImplementedException("Save functionality is not implemented.");
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/questions");
    }
}
