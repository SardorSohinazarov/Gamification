<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/courses/create"
@rendermode InteractiveServer
@using System
@using DataTransferObjects.Courses
@using Services.Courses
@inject ICoursesService CourseService
@inject NavigationManager NavigationManager

<h3>Create New Course</h3>

<EditForm FormName="CourseCreationDto" Model="@course" OnValidSubmit="() => HandleValidSubmit()">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="title">Title:</label>
        <InputText id="title" class="form-control" @bind-Value="course.Title" />
        <ValidationMessage For="@(() => course.Title)" />
    </div>
    <div class="form-group mb-3">
        <label for="description">Description:</label>
        <InputText id="description" class="form-control" @bind-Value="course.Description" />
        <ValidationMessage For="@(() => course.Description)" />
    </div>
    <div class="form-group mb-3">
        <label for="duration">Duration:</label>
        <InputNumber id="duration" class="form-control" @bind-Value="course.Duration" />
        <ValidationMessage For="@(() => course.Duration)" />
    </div>
    <div class="form-group mb-3">
        <label for="starttime">StartTime:</label>
        <InputDate id="starttime" class="form-control" @bind-Value="course.StartTime" />
        <ValidationMessage For="@(() => course.StartTime)" />
    </div>
    <div class="form-group mb-3">
        <label for="startdate">StartDate:</label>
        <InputDate id="startdate" class="form-control" @bind-Value="course.StartDate" />
        <ValidationMessage For="@(() => course.StartDate)" />
    </div>
    <div class="form-group mb-3">
        <label for="createdby">CreatedBy:</label>
        <InputText id="createdby" class="form-control" @bind-Value="course.CreatedBy" />
        <ValidationMessage For="@(() => course.CreatedBy)" />
    </div>
    <div class="form-group mb-3">
        <label for="created">Created:</label>
        <InputDate id="created" class="form-control" @bind-Value="course.Created" />
        <ValidationMessage For="@(() => course.Created)" />
    </div>
    <div class="form-group mb-3">
        <label for="lastmodifiedby">LastModifiedBy:</label>
        <InputText id="lastmodifiedby" class="form-control" @bind-Value="course.LastModifiedBy" />
        <ValidationMessage For="@(() => course.LastModifiedBy)" />
    </div>
    <div class="form-group mb-3">
        <label for="lastmodified">LastModified:</label>
        <InputDate id="lastmodified" class="form-control" @bind-Value="course.LastModified" />
        <ValidationMessage For="@(() => course.LastModified)" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public CourseCreationDto course { get; set; } = new CourseCreationDto();

    private async Task HandleValidSubmit()
    {
        await CourseService.AddAsync(course);
        NavigationManager.NavigateTo("/courses");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/courses");
    }
}
