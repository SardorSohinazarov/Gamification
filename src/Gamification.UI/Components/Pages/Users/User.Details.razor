<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/users/{id:int}"
@rendermode InteractiveServer
@using System
@using Gamification.Domain.Entities
@using DataTransferObjects.Users
@using Services.Users
@inject IUsersService UserService
@inject NavigationManager NavigationManager

<h3>User Details</h3>

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-3">FirstName</dt>
        @if(@user.FirstName != default)
        {
            <dd class="col-sm-9">@user.FirstName</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastName</dt>
        @if(@user.LastName != default)
        {
            <dd class="col-sm-9">@user.LastName</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Username</dt>
        @if(@user.Username != default)
        {
            <dd class="col-sm-9">@user.Username</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">PhoneNumber</dt>
        @if(@user.PhoneNumber != default)
        {
            <dd class="col-sm-9">@user.PhoneNumber</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">TelegramId</dt>
        @if(@user.TelegramId != default)
        {
            <dd class="col-sm-9">@user.TelegramId</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">PasswordHash</dt>
        @if(@user.PasswordHash != default)
        {
            <dd class="col-sm-9">@user.PasswordHash</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Salt</dt>
        @if(@user.Salt != default)
        {
            <dd class="col-sm-9">@user.Salt</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">UserType</dt>
        @if(@user.UserType != default)
        {
            <dd class="col-sm-9">@user.UserType</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">CreatedBy</dt>
        @if(@user.CreatedBy != default)
        {
            <dd class="col-sm-9">@user.CreatedBy</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">Created</dt>
        @if(@user.Created != default)
        {
            <dd class="col-sm-9">@user.Created</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastModifiedBy</dt>
        @if(@user.LastModifiedBy != default)
        {
            <dd class="col-sm-9">@user.LastModifiedBy</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

        <dt class="col-sm-3">LastModified</dt>
        @if(@user.LastModified != default)
        {
            <dd class="col-sm-9">@user.LastModified</dd>
        }
        else
        {
            <dd class="col-sm-9">None</dd>
        }

    </dl>
    <div>
        <button class="btn btn-primary" @onclick="Save">Save</button>
        <button class="btn btn-secondary" @onclick="BackToList">Back to List</button>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private UserViewModel? user;

    protected override async Task OnParametersSetAsync()
    {
        user = await UserService.GetByIdAsync(Id);
    }

    private void Save()
    {
        throw new NotImplementedException("Save functionality is not implemented.");
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/users");
    }
}
