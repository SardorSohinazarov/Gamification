<!-----------------------------------------------------------------------
// This file is autogenerated by EntityCore
// <auto-generated />
------------------------------------------------------------------------>

@page "/lessons/create"
@rendermode InteractiveServer
@using System
@using DataTransferObjects.Lessons
@using Services.Lessons
@inject ILessonsService LessonService
@inject NavigationManager NavigationManager

<h3>Create New Lesson</h3>

<EditForm FormName="LessonCreationDto" Model="@lesson" OnValidSubmit="() => HandleValidSubmit()">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="title">Title:</label>
        <InputText id="title" class="form-control" @bind-Value="lesson.Title" />
        <ValidationMessage For="@(() => lesson.Title)" />
    </div>
    <div class="form-group mb-3">
        <label for="description">Description:</label>
        <InputText id="description" class="form-control" @bind-Value="lesson.Description" />
        <ValidationMessage For="@(() => lesson.Description)" />
    </div>
    <div class="form-group mb-3">
        <label for="createdby">CreatedBy:</label>
        <InputText id="createdby" class="form-control" @bind-Value="lesson.CreatedBy" />
        <ValidationMessage For="@(() => lesson.CreatedBy)" />
    </div>
    <div class="form-group mb-3">
        <label for="created">Created:</label>
        <InputDate id="created" class="form-control" @bind-Value="lesson.Created" />
        <ValidationMessage For="@(() => lesson.Created)" />
    </div>
    <div class="form-group mb-3">
        <label for="lastmodifiedby">LastModifiedBy:</label>
        <InputText id="lastmodifiedby" class="form-control" @bind-Value="lesson.LastModifiedBy" />
        <ValidationMessage For="@(() => lesson.LastModifiedBy)" />
    </div>
    <div class="form-group mb-3">
        <label for="lastmodified">LastModified:</label>
        <InputDate id="lastmodified" class="form-control" @bind-Value="lesson.LastModified" />
        <ValidationMessage For="@(() => lesson.LastModified)" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public LessonCreationDto lesson { get; set; } = new LessonCreationDto();

    private async Task HandleValidSubmit()
    {
        await LessonService.AddAsync(lesson);
        NavigationManager.NavigateTo("/lessons");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/lessons");
    }
}
